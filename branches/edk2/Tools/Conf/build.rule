# file extention   :   file type
FileTypeMapping = {
    ".c"    :   "C-Code",
    ".C"    :   "C-Code",
    ".cpp"  :   "C-Code",
    ".Cpp"  :   "C-Code",
    ".CPP"  :   "C-Code",
    ".h"    :   "C-Header",
    ".H"    :   "C-Header",
    ".asm"  :   "Masm-Code",
    ".Asm"  :   "Masm-Code",
    ".ASM"  :   "Masm-Code",
    ".s"    :   "Iasm-Code",    # IPF assembly code
    ".S"    :   "Gasm-Code",    # GNU assembly code
    ".uni"  :   "Unicode-Text",
    ".Uni"  :   "Unicode-Text",
    ".UNI"  :   "Unicode-Text",
    ".vfr"  :   "Visual-Form-Representation",
    ".Vfr"  :   "Visual-Form-Representation",
    ".VFR"  :   "Visual-Form-Representation",
    ".dxs"  :   "Dependency-Expression",
    ".Dxs"  :   "Dependency-Expression",
    ".DXS"  :   "Dependency-Expression",
    ".fv"   :   "FirmwareVolume",
    ".Fv"   :   "FirmwareVolume",
    ".FV"   :   "FirmwareVolume",
    ".efi"  :   "Efi-Image",
    ".Efi"  :   "Efi-Image",
    ".EFI"  :   "Efi-Image",
    ".SEC"  :   "Firmware-File-System",
    ".PEI"  :   "Firmware-File-System",
    ".DXE"  :   "Firmware-File-System",
    ".APP"  :   "Firmware-File-System",
    ".FYI"  :   "Firmware-File-System",
    ".FFS"  :   "Firmware-File-System",
    ".bmp"  :   "Bmp-Image",
    ".i"    :   "Preprocessed-Code",
    ".asl"  :   "Acpi-Source-Language",
    ".Asl"  :   "Acpi-Source-Language",
    ".ASL"  :   "Acpi-Source-Language",
}

## Build rules for makefile
# Placeholders for string substitution
# 	%(fdir)s		File relative directory within a module
#   %(fbase)s		File name without extension and path
#		%(fname)s		File full name without path
#		%(fext)s		File extension
#
Makefile = {
"nmake"	:
{
"C-Code"    : 
'$(OUTPUT_DIR)\\%(fdir)s\\%(fbase)s.obj : $(MODULE_DIR)\\%(fdir)s\\%(fname)s $(DEPS)\n'\
'\t"$(CC)" $(CC_FLAGS) $(INC) /Fo$@ $(MODULE_DIR)\\%(fdir)s\\%(fname)s\n',

"AutoGen-Code"    : 
'$(OUTPUT_DIR)\\%(fdir)s\\%(fbase)s.obj : $(DEBUG_DIR)\\%(fdir)s\\%(fname)s $(DEPS)\n'\
'\t"$(CC)" $(CC_FLAGS) $(INC) /Fo$@ $(DEBUG_DIR)\\%(fdir)s\\%(fname)s\n',

"Masm-Code" : 
'$(OUTPUT_DIR)\\%(fdir)s\\%(fbase)s.obj : $(MODULE_DIR)\\%(fdir)s\\%(fname)s $(DEPS)\n'\
'\t"$(PP)" $(PP_FLAGS) $(INC) $? > $(@D)\\%(fbase)s.i\n'\
'\tTrim -CONVERT $(@D)\\%(fbase)s.i\n'\
'\t"$(ASM)" $(ASM_FLAGS) /Fo$@ $(@D)\\%(fbase)s.iii\n',
    
"Iasm-Code" : 
'$(OUTPUT_DIR)\\%(fdir)s\\%(fbase)s.obj : $(MODULE_DIR)\\%(fdir)s\\%(fname)s $(DEPS)\n'\
'\t"$(APP)" $(APP_FLAGS) $(INC) $< $(PP_OUTPUT)$(@D)\\%(fbase)s.i\n'\
'\t"$(ASM)" $(ASM_FLAGS) $(ASM_OUTPUT)$@ $(@D)\\%(fbase)s.i\n',

"Visual-Form-Representation" : 
'$(OUTPUT_DIR)\\%(fdir)s\\%(fbase)s.obj : $(MODULE_DIR)\\%(fdir)s\\%(fname)s $(DEPS)\n'\
'\t"$(PP)" $(PP_FLAGS) $(INC) $< $(PP_OUTPUT)$(@D)\\%(fbase)s.i\n'\
'\t"$(VFRC)" $(VFRC_FLAGS) $(INC) $(VFRC_OUTPUT)$(DEBUG_DIR)\\%(fdir)s\\%(fbase)s.c $(@D)\\%(fbase)s.i\n'\
'\t"$(CC)" $(CC_FLAGS) $(INC) $(CC_OUTPUT)$@ $(DEBUG_DIR)\\%(fdir)s\\%(fbase)s.c\n',
},

"gmake":
{
"C-Code"    : 
'''$(OUTPUT_DIR)/%(fdir)s/%(fbase)s.obj : $(MODULE_DIR)/%(fdir)s/%(fname)s $(DEPS)
\t"$(CC)" $(CC_FLAGS) $(INC) $(CC_OUTPUT)$@ $<''',

"Masm-Code" : 
'''$(OUTPUT_DIR)/%(fdir)s/%(fbase)s.obj : $(MODULE_DIR)/%(fdir)s/%(fname)s $(DEPS)
\t"$(PP)" $(PP_FLAGS) $(INC) $? $(PP_OUTPUT)$(@D)/%(fbase)s.i
\tTrim -CONVERT $(@D)/%(fbase)s.i
\t"$(ASM)" $(ASM_FLAGS) $(ASM_OUTPUT)$@ $(@D)/%(fbase)s.iii''',
    
"Gasm-Code" : 
'''$(OUTPUT_DIR)/%(fdir)s/%(fbase)s.obj : $(MODULE_DIR)/%(fdir)s/%(fname)s $(DEPS)
\t"$(ASM)" $(ASM_FLAGS) $(INC) $(ASM_OUTPUT)$@ $<''',

"Iasm-Code" : 
'''$(OUTPUT_DIR)/%(fdir)s/%(fbase)s.obj : $(MODULE_DIR)/%(fdir)s/%(fname)s $(DEPS)
\t"$(APP)" $(APP_FLAGS) $(INC) $< $(PP_OUTPUT)$(@D)/%(fbase)s.i
\t"$(ASM)" $(ASM_FLAGS) $(ASM_OUTPUT)$@ $(@D)/%(fbase)s.i''',

"Visual-Form-Representation" : 
'''$(OUTPUT_DIR)/%(fdir)s/%(fbase)s.obj : $(MODULE_DIR)/%(fdir)s/%(fname)s $(DEPS)
\t"$(PP)" $(PP_FLAGS) $(INC) $< $(PP_OUTPUT)$(@D)/%(fbase)s.i
\t"$(VFRC)" $(VFRC_FLAGS) $(INC) $(VFRC_OUTPUT)$(DEBUG_DIR)/%(fdir)s/%(fbase)s.c $(@D)/%(fbase)s.i
\t"$(CC)" $(CC_FLAGS) $(INC) $(CC_OUTPUT)$@ $(DEBUG_DIR)/%(fdir)s/%(fbase)s.c''',
}
}

# This acts like the main() function for the script, unless it is 'import'ed into another
# script.
if __name__ == '__main__':
    for ext in FileTypeMapping:
        print ext,":",FileTypeMapping[ext]

    for type in Makefile["nmake"]:
        print "[",type,"]\n",Makefile["nmake"][type]
        print

    for type in Makefile["gmake"]:
        print "[",type,"]\n",Makefile["gmake"][type]
        print

